        if(manualPoints) {
            // 逐图像选取同名点
            targetL = Point(0, 0);
            targetR = Point(0, 0);
            setMouseCallback("Ranging_leftcam", onMouseL, (void *)&i);
            setMouseCallback("Ranging_rightcam", onMouseR, (void *)&i);
            cout << "在第" << i + 1 << "组图像中各选择一个匹配点：" << endl;
            waitKey();
            cout << "目标点：L(" << targetL.x << ", " << targetL.y << ")   ";
            cout << "R(" << targetR.x << ", " << targetR.y << ")" << endl;
            cout << ">>>>>>>>>>>>>>>>>>>>>>>>" << endl;
            // 重建坐标
            objectPointsL.clear();
            objectPointsR.clear();
            objectPointsL.push_back(targetL);
            objectPointsR.push_back(targetR);
            // 重建坐标
            reconstruct(cameraMatrixL, cameraMatrixR, R, T,
                        objectPointsL, objectPointsR, structure);
            toPoints3D(structure, structure3D);
            // 中位线距离
            dist = ranging(structure3D, R, T);
            cout << "目标距离 " << dist[0] << " m" << endl << endl;
            cout << "------------------------------------------" << endl << endl;
            waitKey();
        }